# Storage Resources for Fusion Bitcoin Bridge
# Persistent volumes and storage classes

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fusion-bitcoin-fast-ssd
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: storage
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp3
  fsType: ext4
  encrypted: "true"
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
reclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fusion-bitcoin-fast-ssd
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fusion-bitcoin-fast-ssd
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fusion-bitcoin-logs
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: logging
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 100Gi
---
# EFS Storage Class for shared storage
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: storage
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-xxxxxxxxx  # Replace with actual EFS ID
  directoryPerms: "0755"
volumeBindingMode: Immediate
reclaimPolicy: Retain
---
# Backup Storage Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-config
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: backup
data:
  backup-schedule: "0 2 * * *"  # Daily at 2 AM
  retention-days: "30"
  s3-bucket: "fusion-bitcoin-backups"
  backup-types: |
    - database
    - redis
    - application-data
---
# Volume Snapshot Class
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: fusion-bitcoin-snapshot-class
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: storage
driver: ebs.csi.aws.com
deletionPolicy: Retain
parameters:
  tagSpecification_1: "Name=fusion-bitcoin-snapshot"
  tagSpecification_2: "Environment={{ .Values.environment }}"
---
# Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: database-backup
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: backup
spec:
  schedule: "0 2 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: fusion-bitcoin-bridge
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          containers:
          - name: database-backup
            image: postgres:15-alpine
            command:
            - /bin/sh
            - -c
            - |
              TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
              BACKUP_FILE="fusion_bitcoin_backup_${TIMESTAMP}.sql"
              
              echo "Starting database backup at $(date)"
              
              # Create backup
              PGPASSWORD=$DB_PASSWORD pg_dump \
                -h $DB_HOST \
                -p $DB_PORT \
                -U $DB_USERNAME \
                -d $DB_NAME \
                --no-password \
                --verbose \
                --clean \
                --if-exists \
                --create \
                > /tmp/${BACKUP_FILE}
              
              # Upload to S3
              aws s3 cp /tmp/${BACKUP_FILE} s3://${S3_BACKUP_BUCKET}/database/${BACKUP_FILE}
              
              # Cleanup local file
              rm /tmp/${BACKUP_FILE}
              
              echo "Database backup completed at $(date)"
            env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: fusion-bitcoin-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: fusion-bitcoin-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: fusion-bitcoin-config
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: fusion-bitcoin-db-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fusion-bitcoin-db-secret
                  key: password
            - name: S3_BACKUP_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: backup-config
                  key: s3-bucket
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 512Mi
            volumeMounts:
            - name: backup-storage
              mountPath: /tmp
          volumes:
          - name: backup-storage
            emptyDir:
              sizeLimit: 10Gi
          serviceAccountName: fusion-bitcoin-backup-service-account
---
# Redis Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: redis-backup
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: backup
spec:
  schedule: "0 3 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: fusion-bitcoin-bridge
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          containers:
          - name: redis-backup
            image: redis:7-alpine
            command:
            - /bin/sh
            - -c
            - |
              TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
              BACKUP_FILE="fusion_bitcoin_redis_${TIMESTAMP}.rdb"
              
              echo "Starting Redis backup at $(date)"
              
              # Create Redis dump
              redis-cli -h $REDIS_HOST -p $REDIS_PORT --rdb /tmp/${BACKUP_FILE}
              
              # Upload to S3
              aws s3 cp /tmp/${BACKUP_FILE} s3://${S3_BACKUP_BUCKET}/redis/${BACKUP_FILE}
              
              # Cleanup local file
              rm /tmp/${BACKUP_FILE}
              
              echo "Redis backup completed at $(date)"
            env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: fusion-bitcoin-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: fusion-bitcoin-config
                  key: REDIS_PORT
            - name: S3_BACKUP_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: backup-config
                  key: s3-bucket
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
            volumeMounts:
            - name: backup-storage
              mountPath: /tmp
          volumes:
          - name: backup-storage
            emptyDir:
              sizeLimit: 5Gi
          serviceAccountName: fusion-bitcoin-backup-service-account
---
# Log Rotation Job
apiVersion: batch/v1
kind: CronJob
metadata:
  name: log-rotation
  namespace: fusion-bitcoin
  labels:
    app.kubernetes.io/name: fusion-bitcoin-bridge
    app.kubernetes.io/component: logging
spec:
  schedule: "0 1 * * *"  # Daily at 1 AM
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: fusion-bitcoin-bridge
            app.kubernetes.io/component: logging
        spec:
          restartPolicy: OnFailure
          containers:
          - name: log-rotation
            image: busybox:1.35
            command:
            - /bin/sh
            - -c
            - |
              echo "Starting log rotation at $(date)"
              
              # Find and compress logs older than 1 day
              find /var/log -name "*.log" -mtime +1 -exec gzip {} \;
              
              # Delete compressed logs older than 30 days
              find /var/log -name "*.gz" -mtime +30 -delete
              
              echo "Log rotation completed at $(date)"
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                cpu: 100m
                memory: 128Mi
            volumeMounts:
            - name: log-storage
              mountPath: /var/log
          volumes:
          - name: log-storage
            persistentVolumeClaim:
              claimName: fusion-bitcoin-logs