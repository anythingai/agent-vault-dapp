/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LimitOrderProtocol,
  LimitOrderProtocolInterface,
} from "../../../../contracts/1inch/LimitOrderProtocol.sol/LimitOrderProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_escrowFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EscrowCreatedForOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makerTraits",
        type: "uint256",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bitInvalidatorForOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "makerTraits",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cancelledOrders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowFactory",
    outputs: [
      {
        internalType: "contract EscrowFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerTraits",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerTraits",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "fillOrderArgs",
    outputs: [
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getEscrowForOrder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "isOrderProcessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isProcessedOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderToEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "remainingInvalidatorForOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a03462000248576001600160401b039062001f0290601f38839003908101601f1916820190848211838310176200023257808391604095869485528339810103126200024857620000606020620000588362000269565b920162000269565b9082516200006e816200024d565b601a8152602081017f31696e6368204c696d6974204f726465722050726f746f636f6c0000000000008152845195620000a7876200024d565b6001875260208701600d60fa1b8152620000c1846200027e565b92610120938452620000d38962000451565b94610140958652519020978860e052519020610100978189524660a05287519160208301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528984015260608301524660808301523060a083015260a0825260c0820192828410908411176200023257828852815190206080523060c05233156200021b57505060028054336001600160a01b0319821681179092559551956001600160a01b03919082167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360016003558061016094168452610180941684526119039586620005ff873960805186611397015260a05186611463015260c05186611361015260e051866113e60152518561140c01525184610394015251836103be01525182610c09015251818181610297015281816107720152610e930152f35b631e4fbdf760e01b8252600060c490910152602490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b038211176200023257604052565b51906001600160a01b03821682036200024857565b805160209190828110156200031d575090601f825111620002bc5780825192015190808310620002ad57501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000303575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620002df565b6001600160401b03811162000232576000928354926001938481811c9116801562000446575b838210146200043257601f8111620003fc575b5081601f8411600114620003955750928293918392869462000389575b50501b916000199060031b1c191617905560ff90565b01519250388062000373565b919083601f1981168780528488209488905b88838310620003e15750505010620003c7575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620003ba565b858701518855909601959485019487935090810190620003a7565b85805284601f848820920160051c820191601f860160051c015b8281106200042657505062000356565b87815501859062000416565b634e487b7160e01b86526022600452602486fd5b90607f169062000343565b805160209081811015620004df5750601f8251116200047e5780825192015190808310620002ad57501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620004c5575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620004a1565b9192916001600160401b038111620002325760019182548381811c91168015620005f3575b82821014620005dd57601f8111620005a4575b5080601f8311600114620005575750819293946000926200054b575b5050600019600383901b1c191690821b17905560ff90565b01519050388062000533565b90601f198316958460005282600020926000905b8882106200058c5750508385969710620003c757505050811b01905560ff90565b8087859682949686015181550195019301906200056b565b8360005283601f83600020920160051c820191601f850160051c015b828110620005d057505062000517565b60008155018490620005c0565b634e487b7160e01b600052602260045260246000fd5b90607f16906200050456fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c918262b727da14611007575081630550c9bf14610d2f578163143e86a714610cee5781633644e51514610cd15781633b42e48014610ca85781633f4ba83a14610c385781633fc8cef314610bf4578163435b978914610bb55781635c975abb14610b8e5781635d9dbf5314610588578163617844321461055b578163715018a6146104fb5781638456cb591461049a57816384b0196e1461037c5781638da5cb5b146103535781638f13f48e14610326578163b68fb020146102c6578163bdd1daaa14610282578163c6ed8db01461016b578163db2e21bc14610232578163f2fde38b146101a2578163f74d34751461016b575063f973a2091461012e5780610012565b34610167578160031936011261016757602090517f3af21ec5a20011b88d3b7b4ed7c806cef05a5980cf34974bcd53566a131f7e4c8152f35b5080fd5b90503461019e57602036600319011261019e5735825260076020908152918190205490516001600160a01b039091168152f35b8280fd5b90503461019e57602036600319011261019e576101bd611031565b906101c661108c565b6001600160a01b0391821692831561021c575050600254826bffffffffffffffffffffffff60a01b821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b50503461016757816003193601126101675761024c61108c565b8180808060018060a01b03600254164790828215610279575bf11561026f575080f35b51903d90823e3d90fd5b506108fc610265565b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9190503461019e578060031936011261019e577fcbfa7d191838ece7ba4783ca3a30afd316619b7f368094b57ee7ffde9a923db190602435928385526006602052818520600160ff1982541617905581519384523560208401523392a280f35b90503461019e57602036600319011261019e578160209360ff923581526006855220541690519015158152f35b50503461016757816003193601126101675760025490516001600160a01b039091168152602090f35b9190503461019e578260031936011261019e576103b87f0000000000000000000000000000000000000000000000000000000000000000611144565b926103e27f000000000000000000000000000000000000000000000000000000000000000061126a565b908251926020928385019585871067ffffffffffffffff8811176104875750928061043d838896610430998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b019061104c565b91898303908a015261104c565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061047057505050500390f35b835185528695509381019392810192600101610461565b634e487b7160e01b845260419052602483fd5b50503461016757816003193601126101675760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916104d861108c565b6104e061133d565b6002805460ff60a01b1916600160a01b17905551338152a180f35b833461055857806003193601126105585761051461108c565b600280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b90503461019e57602036600319011261019e578160209360ff923581526008855220541690519015158152f35b905036600319016101a08112610b8a576101001361019e576101843591839067ffffffffffffffff61012435818611610b8a5736602387011215610b8a5785850135918211610b8a5760249436868489010111610b86576105e7611795565b6105ef61133d565b6001600160a01b039061060c826106046114af565b1615156115cb565b610620826106186114c5565b161515611621565b6106348261062c6114db565b16151561167d565b60a43596871561064481156116d9565b60c435996106538b1515611737565b875195896020809961066e82601f19601f840116018b611122565b808a528087838c01960186378901015260ff8961069161068c611507565b611489565b9b8c815260068b52205416610b385760ff898e8c815260088b52205416610ae5576106e2906106d9906001600160ff1b03811690610104359060ff90811c601b01168d6117b8565b90929192611848565b85806106ec6114af565b16911603610a9557855115610a5557606086805181010312610a5157519460608882015191015185811603610a51575b6107246114c5565b958561072e6114f1565b818b519963690a77b360e01b8b528d898c015216868a01528c60448a01523060648a015216608488015260a487015260c4860152858560e48166038d7ea4c68000887f0000000000000000000000000000000000000000000000000000000000000000165af1948515610a47578b95610a0b575b50836107ac6114c5565b1661094d57883410610900578a908982916108f6575b828092918192888a1690f1156108ec5787341161089e575b50507fb569cbef47b67155eabc201efda44211957aa566242ee45f39bb1a489e14cc608186928661089a999a9b5b85815260088852818120600160ff198254161790556007885220941693846bffffffffffffffffffffffff60a01b825416179055827fb38583f2adb435cac858db9d3e8d3ca952ccb32307e2f3d0053b415d2d2934818780518c81528d89820152a26108726114af565b16938551898152a4600160035551938493846040919493926060820195825260208201520152565b0390f35b873403913483116108db5750508880808093818b34146108d2575b3390f1156108c85738806107da565b83513d89823e3d90fd5b506108fc6108b9565b634e487b7160e01b8b526011905289fd5b85513d8b823e3d90fd5b6108fc91506107c2565b60848383888a519262461bcd60e51b8452830152808201527f4c696d69744f7264657250726f746f636f6c3a20496e73756666696369656e746044820152630408aa8960e31b6064820152fd5b50908261095b9a939a6114c5565b1685846109666114af565b89516323b872dd60e01b848201908152918f1687820152888f16604482015260648082018e90528152610998816110ea565b519082855af115610a015783513d6109f85750803b155b6109e6575050507fb569cbef47b67155eabc201efda44211957aa566242ee45f39bb1a489e14cc608861089a979899868894610808565b8651635274afe760e01b815291820152fd5b600114156109af565b86513d85823e3d90fd5b9094508581813d8311610a40575b610a238183611122565b81010312610a3c57518381168103610a3c5793386107a2565b8a80fd5b503d610a19565b87513d8d823e3d90fd5b8b80fd5b5093508551858101908882524288820152878152610a72816110b8565b51902093611c2042018042111561071c57634e487b7160e01b8c5260118452828cfd5b875162461bcd60e51b81528085018890526025818501527f4c696d69744f7264657250726f746f636f6c3a20496e76616c6964207369676e604482015264617475726560d81b6064820152608490fd5b885162461bcd60e51b81528086018990526028818601527f4c696d69744f7264657250726f746f636f6c3a204f7264657220616c726561646044820152671e48199a5b1b195960c21b6064820152608490fd5b885162461bcd60e51b81528086018990526023818601527f4c696d69744f7264657250726f746f636f6c3a204f726465722063616e63656c6044820152621b195960ea1b6064820152608490fd5b8480fd5b8380fd5b50503461016757816003193601126101675760209060ff60025460a01c1690519015158152f35b90503461019e578160031936011261019e5760209282916001600160a01b03610bdc611031565b16825284528181206024358252845220549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461019e578260031936011261019e57610c5261108c565b6002549060ff8260a01c1615610c9a575060ff60a01b1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b5050346101675761010036600319011261016757602090610cca61068c611507565b9051908152f35b505034610167578160031936011261016757602090610cca61135e565b50503461016757806003193601126101675760209181906001600160a01b03610d15611031565b168152600584528181206024358252845220549051908152f35b905036600319016101808112610b8a576101001361019e576101243590610d54611795565b610d5c61133d565b6001600160a01b0392610d71846106046114af565b610d7d846106186114c5565b610d898461062c6114db565b60a435928315610d9981156116d9565b60c43595610da8871515611737565b610db361068c611507565b948589526020936006855260ff868b205416610fb857868a526008855260ff868b205416610f6457610e02906106d9906001600160ff1b03811690610104359060ff90811c601b01168a6117b8565b8280610e0c6114af565b16911603610f135760605115610ed0576060805112610ecc5760805160a05160c05184811603610a3c5790935b610e416114c5565b91610e4a6114f1565b958589519763690a77b360e01b89528b878a01528160249616868a01528c60448a01523060648a015216608488015260a487015260c4860152858560e48166038d7ea4c68000887f0000000000000000000000000000000000000000000000000000000000000000165af1948515610a47578b95610a0b5750836107ac6114c5565b8880fd5b8451848101908782524287820152868152610eea816110b8565b51902092611c204201804211610f005790610e39565b634e487b7160e01b8b526011835260248bfd5b845162461bcd60e51b8152908101849052602560248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c6964207369676e604482015264617475726560d81b6064820152608490fd5b855162461bcd60e51b8152808301869052602860248201527f4c696d69744f7264657250726f746f636f6c3a204f7264657220616c726561646044820152671e48199a5b1b195960c21b6064820152608490fd5b855162461bcd60e51b8152808301869052602360248201527f4c696d69744f7264657250726f746f636f6c3a204f726465722063616e63656c6044820152621b195960ea1b6064820152608490fd5b92915034610b8a576020366003190112610b8a573583526008602090815292205460ff1615158152f35b600435906001600160a01b038216820361104757565b600080fd5b919082519283825260005b848110611078575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611057565b6002546001600160a01b031633036110a057565b60405163118cdaa760e01b8152336004820152602490fd5b6060810190811067ffffffffffffffff8211176110d457604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176110d457604052565b6040810190811067ffffffffffffffff8211176110d457604052565b90601f8019910116810190811067ffffffffffffffff8211176110d457604052565b60ff81146111825760ff811690601f8211611170576040519161116683611106565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516000805490600182811c90808416938415611260575b602094858410811461124c578387528694939291811561122c57506001146111d0575b50506111cd92500382611122565b90565b60008080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395935091905b8183106112145750506111cd935082010138806111bf565b855487840185015294850194869450918301916111fc565b9150506111cd94925060ff191682840152151560051b82010138806111bf565b634e487b7160e01b85526022600452602485fd5b91607f169161119c565b60ff811461128c5760ff811690601f8211611170576040519161116683611106565b50604051600060019081549182811c90808416938415611333575b602094858410811461124c578387528694939291811561122c57506001146112d75750506111cd92500382611122565b60008181527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf695935091905b81831061131b5750506111cd935082010138806111bf565b85548784018501529485019486945091830191611303565b91607f16916112a7565b60ff60025460a01c1661134c57565b60405163d93c066560e01b8152600490fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611460575b156113b9577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176110d45760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611390565b60429061149461135e565b906040519161190160f01b8352600283015260228201522090565b6024356001600160a01b03811681036110475790565b6064356001600160a01b03811681036110475790565b6084356001600160a01b03811681036110475790565b6044356001600160a01b03811681036110475790565b6024356001600160a01b038181169182900361104757604435908082168092036110475760643581811680910361104757608435918216809203611047576040519260208401947f3af21ec5a20011b88d3b7b4ed7c806cef05a5980cf34974bcd53566a131f7e4c865260043560408601526060850152608084015260a083015260c082015260a43560e082015260c43561010082015261012060e435818301528152610140810181811067ffffffffffffffff8211176110d45760405251902090565b156115d257565b60405162461bcd60e51b815260206004820152602160248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c6964206d616b656044820152603960f91b6064820152608490fd5b1561162857565b60405162461bcd60e51b815260206004820152602760248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c6964206d616b656044820152661c88185cdcd95d60ca1b6064820152608490fd5b1561168457565b60405162461bcd60e51b815260206004820152602760248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c69642074616b656044820152661c88185cdcd95d60ca1b6064820152608490fd5b156116e057565b60405162461bcd60e51b815260206004820152602960248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c6964206d616b696044820152681b99c8185b5bdd5b9d60ba1b6064820152608490fd5b1561173e57565b60405162461bcd60e51b815260206004820152602960248201527f4c696d69744f7264657250726f746f636f6c3a20496e76616c69642074616b696044820152681b99c8185b5bdd5b9d60ba1b6064820152608490fd5b6002600354146117a6576002600355565b604051633ee5aeb560e01b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161183c57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156118305780516001600160a01b0381161561182757918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b60048110156118b7578061185a575050565b600181036118745760405163f645eedf60e01b8152600490fd5b600281036118955760405163fce698f760e01b815260048101839052602490fd5b60031461189f5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b0b2b040523bb52f3489e826526e3936d3bd380700ba15251cfb8a70ce56475764736f6c63430008140033";

type LimitOrderProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitOrderProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitOrderProtocol__factory extends ContractFactory {
  constructor(...args: LimitOrderProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LimitOrderProtocol";
  }

  override getDeployTransaction(
    _weth: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_weth, _escrowFactory, overrides || {});
  }
  override deploy(
    _weth: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_weth, _escrowFactory, overrides || {}) as Promise<
      LimitOrderProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LimitOrderProtocol__factory {
    return super.connect(runner) as LimitOrderProtocol__factory;
  }
  static readonly contractName: "LimitOrderProtocol";

  public readonly contractName: "LimitOrderProtocol";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitOrderProtocolInterface {
    return new Interface(_abi) as LimitOrderProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LimitOrderProtocol {
    return new Contract(address, _abi, runner) as unknown as LimitOrderProtocol;
  }
}
