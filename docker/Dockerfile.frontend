# Production Dockerfile for Frontend Application
# Multi-stage build for optimized production image

# Build stage
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Create app directory
WORKDIR /app

# Copy package files
COPY frontend/package*.json ./
COPY frontend/tsconfig.json ./
COPY frontend/vite.config.ts ./

# Install dependencies
RUN npm ci --include=dev

# Copy source code
COPY frontend/src/ ./src/
COPY frontend/public/ ./public/
COPY frontend/index.html ./
COPY frontend/.env.example ./

# Build the application for production
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS runner

# Install security updates
RUN apk update && apk upgrade

# Remove default Nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy Nginx configuration
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Create nginx user (if not exists) and set permissions
RUN addgroup -g 101 -S nginx || true
RUN adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# Create necessary directories and set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /var/run/nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Create non-root nginx configuration
RUN sed -i 's/user nginx;//' /etc/nginx/nginx.conf && \
    sed -i 's/listen 80;/listen 3002;/' /etc/nginx/conf.d/default.conf

# Switch to non-root user
USER nginx

# Set environment variables
ENV NODE_ENV=production
ENV SERVICE_NAME=frontend

# Expose port
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3002/health || exit 1

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]

# Labels for metadata
LABEL org.opencontainers.image.title="1inch Fusion Bitcoin Frontend"
LABEL org.opencontainers.image.description="Frontend application for 1inch Fusion Bitcoin Bridge"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.vendor="1inch"
LABEL org.opencontainers.image.source="https://github.com/1inch/fusion-bitcoin-bridge"