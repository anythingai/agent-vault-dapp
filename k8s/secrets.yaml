apiVersion: v1
kind: Secret
metadata:
  name: fusion-bitcoin-secrets
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: secrets
    environment: production
type: Opaque
data:
  # Note: These are base64 encoded placeholders
  # In production, these should be replaced with actual encrypted values
  # Use: echo -n "your-secret-value" | base64
  
  # Blockchain secrets (base64 encoded)
  ETH_PRIVATE_KEY: ZW5jcnlwdGVkOllPVVJfRVRIX1BSSVZBVEVUS0VZX0hFUkU=
  BTC_PRIVATE_KEY: ZW5jcnlwdGVkOllPVVJfQlRDX1BSSVZBVEVTS0VZX0hFUkU=
  ETH_RPC_URL: aHR0cHM6Ly9ldGgtbWFpbm5ldC5nLmFsY2hlbXkuY29tL3YyL1lPVVJfQUxDSEVNWV9LRVk=
  BTC_RPC_URL: aHR0cHM6Ly9idGMuZ2V0YmxvY2suaW8vWU9VUl9HRVRCTE9DS19LRVkvbWFpbm5ldC8=
  
  # Authentication secrets
  JWT_SECRET: ZW5jcnlwdGVkOllPVVJfSldUX1NFQ1JFVF9IRVJFXzMyX0NIQVJT
  SESSION_SECRET: ZW5jcnlwdGVkOllPVVJfU0VTU0lPTl9TRUNSRVRfSEVSRV8zMl9DSEFSU
  API_SECRET_KEY: ZW5jcnlwdGVkOllPVVJfQVBJX1NFQ1JFVF9LRVlfSEVSRV8zMl9DSEFSU
  
  # Database secrets
  DB_PASSWORD: WU9VUl9EQl9QQVNTV09SRF9IRVJF
  DB_USERNAME: ZnVzaW9uX2JpdGNvaW5fdXNlcg==
  
  # Redis secrets
  REDIS_PASSWORD: WU9VUl9SRUNJU19QQVNTV09SRF9IRVJF
  
  # External service API keys
  ETHERSCAN_API_KEY: WU9VUl9FVEhFUlNDQU5fQVBJX0tFWV9IRVJF
  ALCHEMY_API_KEY: WU9VUl9BTENIRU1ZX0FQSV9LRVlfSEVSRQ==
  INFURA_API_KEY: WU9VUl9JTkZVUkFfQVBJX0tFWV9IRVJF
  
  # Monitoring secrets
  SENTRY_DSN: aHR0cHM6Ly95b3VyLXNlbnRyeS1kc24taGVyZQ==
  GRAFANA_API_KEY: WU9VUl9HUkFGQU5BX0FQSV9LRVlfSEVSRQ==
  
  # Encryption secrets
  SECRETS_ENCRYPTION_KEY: ZW5jcnlwdGVkOllPVVJfU0VDUkVUU19FTkNSWVBUSU9OX0tFWV9IRVJF
  
  # Notification secrets
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMveW91ci13ZWJob29rLXVybA==
  TELEGRAM_BOT_TOKEN: WU9VUl9URUxFR1JBTV9CT1RfVE9LRU5fSEVSRQ==
  
  # SSL/TLS certificates (if using cert-manager, this can be managed automatically)
  # TLS_CERT: LS0tLS1CRUdJTi... (base64 encoded certificate)
  # TLS_KEY: LS0tLS1CRUdJTi... (base64 encoded private key)

---
apiVersion: v1
kind: Secret
metadata:
  name: fusion-bitcoin-db-secret
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: database
    environment: production
type: kubernetes.io/basic-auth
data:
  username: ZnVzaW9uX2JpdGNvaW5fdXNlcg== # fusion_bitcoin_user
  password: WU9VUl9EQl9QQVNTV09SRF9IRVJF # YOUR_DB_PASSWORD_HERE

---
apiVersion: v1
kind: Secret
metadata:
  name: fusion-bitcoin-redis-secret
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: redis
    environment: production
type: Opaque
data:
  password: WU9VUl9SRUNJU19QQVNTV09SRF9IRVJF # YOUR_REDIS_PASSWORD_HERE

---
apiVersion: v1
kind: Secret
metadata:
  name: fusion-bitcoin-registry-secret
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: registry
    environment: production
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for pulling private images
  # Generate with: kubectl create secret docker-registry --dry-run=client -o yaml
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJyZWdpc3RyeS5leGFtcGxlLmNvbSI6IHsKICAgICAgInVzZXJuYW1lIjogInlvdXItdXNlcm5hbWUiLAogICAgICAicGFzc3dvcmQiOiAieW91ci1wYXNzd29yZCIsCiAgICAgICJhdXRoIjogImJhc2U2NC1lbmNvZGVkLXVzZXJuYW1lOnBhc3N3b3JkIgogICAgfQogIH0KfQ==

---
# ServiceAccount for the application pods
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fusion-bitcoin-service-account
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: serviceaccount
    environment: production
secrets:
- name: fusion-bitcoin-registry-secret
imagePullSecrets:
- name: fusion-bitcoin-registry-secret

---
# Role for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: fusion-bitcoin
  name: fusion-bitcoin-role
  labels:
    app: fusion-bitcoin-bridge
    component: rbac
    environment: production
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
# RoleBinding to bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fusion-bitcoin-rolebinding
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: rbac
    environment: production
subjects:
- kind: ServiceAccount
  name: fusion-bitcoin-service-account
  namespace: fusion-bitcoin
roleRef:
  kind: Role
  name: fusion-bitcoin-role
  apiGroup: rbac.authorization.k8s.io

---
# Security context constraints (OpenShift specific - optional)
apiVersion: v1
kind: SecurityContextConstraints
metadata:
  name: fusion-bitcoin-scc
  labels:
    app: fusion-bitcoin-bridge
    component: security
    environment: production
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: RunAsAny
readOnlyRootFilesystem: false
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:fusion-bitcoin:fusion-bitcoin-service-account
volumes:
- configMap
- secret
- emptyDir
- persistentVolumeClaim