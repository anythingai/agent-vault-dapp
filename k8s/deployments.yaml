# Relayer Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusion-bitcoin-relayer
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: relayer
    environment: production
    version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: fusion-bitcoin-bridge
      component: relayer
  template:
    metadata:
      labels:
        app: fusion-bitcoin-bridge
        component: relayer
        environment: production
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fusion-bitcoin-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: relayer
        image: registry.example.com/fusion-bitcoin-relayer:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "relayer"
        - name: PORT
          value: "3000"
        - name: METRICS_PORT
          value: "9090"
        envFrom:
        - configMapRef:
            name: fusion-bitcoin-config
        - secretRef:
            name: fusion-bitcoin-secrets
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        - name: networks-config
          mountPath: /app/config/networks
          readOnly: true
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: networks-config
        configMap:
          name: fusion-bitcoin-networks
      terminationGracePeriodSeconds: 30

---
# Resolver Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusion-bitcoin-resolver
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: resolver
    environment: production
    version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: fusion-bitcoin-bridge
      component: resolver
  template:
    metadata:
      labels:
        app: fusion-bitcoin-bridge
        component: resolver
        environment: production
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fusion-bitcoin-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: resolver
        image: registry.example.com/fusion-bitcoin-resolver:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "resolver"
        - name: PORT
          value: "3001"
        - name: METRICS_PORT
          value: "9091"
        envFrom:
        - configMapRef:
            name: fusion-bitcoin-config
        - secretRef:
            name: fusion-bitcoin-secrets
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        - name: networks-config
          mountPath: /app/config/networks
          readOnly: true
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: networks-config
        configMap:
          name: fusion-bitcoin-networks
      terminationGracePeriodSeconds: 30

---
# Frontend Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusion-bitcoin-frontend
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: frontend
    environment: production
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: fusion-bitcoin-bridge
      component: frontend
  template:
    metadata:
      labels:
        app: fusion-bitcoin-bridge
        component: frontend
        environment: production
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9092"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fusion-bitcoin-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: frontend
        image: registry.example.com/fusion-bitcoin-frontend:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3002
          protocol: TCP
        - name: metrics
          containerPort: 9092
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "frontend"
        envFrom:
        - configMapRef:
            name: fusion-bitcoin-config
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: tmp-volume
          mountPath: /tmp
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-default-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: fusion-bitcoin-nginx
      - name: nginx-default-config
        configMap:
          name: fusion-bitcoin-nginx
      terminationGracePeriodSeconds: 30

---
# PostgreSQL Database Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fusion-bitcoin-postgres
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: postgres
    environment: production
spec:
  serviceName: fusion-bitcoin-postgres-headless
  replicas: 1
  selector:
    matchLabels:
      app: fusion-bitcoin-bridge
      component: postgres
  template:
    metadata:
      labels:
        app: fusion-bitcoin-bridge
        component: postgres
        environment: production
    spec:
      serviceAccountName: fusion-bitcoin-service-account
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: fusion-bitcoin-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: fusion-bitcoin-db-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fusion-bitcoin-db-secret
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql
          readOnly: true
      volumes:
      - name: postgres-config
        configMap:
          name: fusion-bitcoin-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
      labels:
        app: fusion-bitcoin-bridge
        component: postgres
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 100Gi

---
# Redis Cache Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusion-bitcoin-redis
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: redis
    environment: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fusion-bitcoin-bridge
      component: redis
  template:
    metadata:
      labels:
        app: fusion-bitcoin-bridge
        component: redis
        environment: production
    spec:
      serviceAccountName: fusion-bitcoin-service-account
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fusion-bitcoin-redis-secret
              key: password
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save
        - "60 10000"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
          readOnly: true
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: fusion-bitcoin-redis-pvc
      - name: redis-config
        configMap:
          name: fusion-bitcoin-config
      terminationGracePeriodSeconds: 30

---
# Redis Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fusion-bitcoin-redis-pvc
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: redis
    environment: production
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: "fast-ssd"

---
# Horizontal Pod Autoscaler for Relayer
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fusion-bitcoin-relayer-hpa
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: relayer
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fusion-bitcoin-relayer
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# Horizontal Pod Autoscaler for Resolver
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fusion-bitcoin-resolver-hpa
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: resolver
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fusion-bitcoin-resolver
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler for Frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fusion-bitcoin-frontend-hpa
  namespace: fusion-bitcoin
  labels:
    app: fusion-bitcoin-bridge
    component: frontend
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fusion-bitcoin-frontend
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70